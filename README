Global setup:

 Set up git
  git config --global user.name "eefolks"
  git config --global user.email eefolks@gmail.com
      

Next steps:

  mkdir eefolks-hello
  cd eefolks-hello
  git init
  touch README
  git add README
  git commit -m 'first commit'
  git remote add origin git@github.com:eefolks/eefolks-hello.git
  git push -u origin master
      

Existing Git Repo?

  cd existing_git_repo
  git remote add origin git@github.com:eefolks/eefolks-hello.git
  git push -u origin master
      

Importing a Subversion Repo?

  Check out the guide for step by step instructions.
      

When you're done:

  Continue

更新文件
# vi README
自动commit更改文件
# git commit -a    
更新至远程
# git push origin master

创建和合并分支
#git branch 显示当前分支是master
#git branch new-feature  
# git checkout new-feature 
# vi page_cache.inc.php
# git add page_cache.inc.php
Commit 到本地GIT
# git commit -a -m "added initial version of page cache"
合并到远程服务器
# git push origin new-feature

如果new-feature分支成熟了，觉得有必要合并进master
#git checkout master
#git merge new-feature
#git branch
#git push
则master中也合并了new-feature 的代码

再登录到GitHub可以看见"Switch Branches"下的分支选项：

首先是关于git remote add xxx xxx这个用法。这个做法是取别名，避免了每次都要输入完整的路径名，当然，你也可以这么做，当然没问题。
比如：git pull url master，就是把远程的url这个拉取到本机的master分支上。
可是每次都这么做多麻烦，为此使用别名，以后就直接通过别名来push，pull。
实际上，昨晚这个工作后，会在.git目录下面的config文件中写入一个项，用来指示该别名的信息,如下所示：
[remote "origin"]
url = git@github.com:xxx/rep.git
fetch = +refs/heads/*:refs/remotes/origin/*
上面就是别名origin这个别名的信息。记录了目标远程版本库的地址
